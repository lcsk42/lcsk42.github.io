<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MySQL on Lucas's Article</title><link>https://www.lcsk42.com/tags/mysql/</link><description>Recent content in MySQL on Lucas's Article</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 11 Feb 2025 14:50:48 +0800</lastBuildDate><atom:link href="https://www.lcsk42.com/tags/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>Database Mysql</title><link>https://www.lcsk42.com/post/database-mysql/</link><pubDate>Tue, 11 Feb 2025 14:50:48 +0800</pubDate><guid>https://www.lcsk42.com/post/database-mysql/</guid><description>&lt;p>总结了遇到了数据库相关的知识。&lt;/p>
&lt;h2 id="索引">索引
&lt;/h2>&lt;p>MySQL 索引是提高数据库查询性能的重要工具。索引类似于书的目录，可以帮助数据库快速找到所需的数据，而不必遍历整个表。以下是有关 MySQL 索引的一些关键点和常见类型：&lt;/p>
&lt;h3 id="索引的作用">索引的作用
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>加速查询&lt;/strong>：通过索引，MySQL 可以快速定位到所需的数据行，从而减少查询时间&lt;/li>
&lt;li>&lt;strong>确保唯一性&lt;/strong>：唯一索引（Unique Index）可以确保表中的某一列的所有值都是唯一的&lt;/li>
&lt;li>&lt;strong>优化排序和分组&lt;/strong>：索引可以优化 &lt;code>ORDER BY&lt;/code> 和 &lt;code>GROUP BY&lt;/code> 操作。&lt;/li>
&lt;li>&lt;strong>提高连接性能&lt;/strong>：在多表连接时，索引用于加速表之间的匹配。&lt;/li>
&lt;/ol>
&lt;h3 id="索引的类型">索引的类型
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>普通索引（Index）&lt;/strong>：最基本的索引类型，没有任何限制&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INDEX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">column_name&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>唯一索引（Unique Index）&lt;/strong>：确保索引列中的值是唯一的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">UNIQUE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INDEX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">column_name&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>主键索引（Primary Key）&lt;/strong>：一种特殊的唯一索引，不允许有空值。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NOT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">column_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">datatype&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>全文索引（Full-Text Index）&lt;/strong>：用于对文本进行全文搜索。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FULLTEXT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INDEX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">column_name&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>复合索引（Composite Index）&lt;/strong>：在多个列上创建的索引。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INDEX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">column1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">column2&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="索引的创建和管理">索引的创建和管理
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>创建索引&lt;/strong>：使用 &lt;code>CREATE INDEX&lt;/code> 或在 &lt;code>CREATE TABLE&lt;/code> 语句中定义。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INDEX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">column_name&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>删除索引&lt;/strong>：使用 &lt;code>DROP INDEX&lt;/code> 语句。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">DROP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INDEX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>查看索引&lt;/strong>：使用 &lt;code>SHOW INDEX&lt;/code> 语句。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SHOW&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">INDEX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="索引的优缺点">索引的优缺点
&lt;/h3>&lt;p>优点：&lt;/p>
&lt;ul>
&lt;li>显著提高查询速度。&lt;/li>
&lt;li>帮助维护数据的唯一性。&lt;/li>
&lt;li>加快数据检索的效率。&lt;/li>
&lt;/ul>
&lt;p>缺点：&lt;/p>
&lt;ul>
&lt;li>占用磁盘空间。&lt;/li>
&lt;li>影响插入、更新和删除操作的速度（因为需要维护索引）。&lt;/li>
&lt;/ul>
&lt;h3 id="索引的最佳实践">索引的最佳实践
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>选择性高的列上创建索引&lt;/strong>：选择性越高，索引的效率越高。&lt;/li>
&lt;li>&lt;strong>尽量避免在频繁更新的列上创建索引&lt;/strong>：减少索引维护开销。&lt;/li>
&lt;li>&lt;strong>使用覆盖索引&lt;/strong>：创建包含所有查询列的复合索引，避免回表查询。&lt;/li>
&lt;li>&lt;strong>定期维护索引&lt;/strong>：使用 &lt;code>ANALYZE TABLE&lt;/code> 和 &lt;code>OPTIMIZE TABLE&lt;/code> 进行索引维护。&lt;/li>
&lt;/ol>
&lt;h3 id="创建索引的原则">创建索引的原则
&lt;/h3>&lt;ol>
&lt;li>最左前缀匹配原则，非常重要的原则，mysql 会一直向右匹配直到遇到范围查询(&lt;code>&amp;gt;&lt;/code>、&lt;code>&amp;lt;&lt;/code>、&lt;code>between&lt;/code>、&lt;code>like&lt;/code>)就停止匹配，比如 &lt;code>a = 1 and b = 2 and c &amp;gt; 3 and d = 4&lt;/code> 如果建立(a, b, c, d)顺序的索引，d 是用不到索引的，如果建立(a, b, d, c)的索引则都可以用到，a, b, d 的顺序可以任意调整。&lt;/li>
&lt;li>=和 in 可以乱序，比如 &lt;code>a = 1 and b = 2 and c = 3&lt;/code> 建立(a, b, c)索引可以任意顺序，mysql 的查询优化器会帮你优化成索引可以识别的形式。&lt;/li>
&lt;li>尽量选择区分度高的列作为索引，区分度的公式是 &lt;code>count(distinct col)/count(\*)&lt;/code>，表示字段不重复的比例，比例越大我们扫描的记录数越少，唯一键的区分度是 1，而一些状态、性别字段可能在大数据面前区分度就是 0，那可能有人会问，这个比例有什么经验值吗？使用场景不同，这个值也很难确定，一般需要 join 的字段我们都要求是 0.1 以上，即平均 1 条扫描 10 条记录。&lt;/li>
&lt;li>索引列不能参与计算，保持列“干净”，比如 &lt;code>from_unixtime(create_time) = '2014-05-29'&lt;/code> 就不能使用到索引，原因很简单，b+树中存的都是数据表中的字段值，但进行检索时，需要把所有元素都应用函数才能比较，显然成本太大。所以语句应该写成 &lt;code>create_time = unix_timestamp('2014-05-29')&lt;/code>。&lt;/li>
&lt;li>尽量的扩展索引，不要新建索引。比如表中已经有 a 的索引，现在要加(a, b)的索引，那么只需要修改原来的索引即可。&lt;/li>
&lt;/ol>
&lt;h2 id="索引失效">索引失效
&lt;/h2>&lt;p>在某些情况下，MySQL 的索引可能会失效，导致查询性能下降。以下是一些常见的索引失效的情况：&lt;/p>
&lt;h3 id="条件不符合索引使用规则">条件不符合索引使用规则
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>范围查询影响后续索引&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>当一个查询中使用了范围条件（如 &lt;code>&amp;lt;&lt;/code>, &lt;code>&amp;gt;&lt;/code>, &lt;code>BETWEEN&lt;/code>, &lt;code>LIKE&lt;/code> &lt;code>'abc%'&lt;/code> 等）时，索引在范围条件之后的列将不会被使用。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 复合索引 idx_name_department(last_name, department_id)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 只会使用 last_name 的索引，department_id 不会被使用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">last_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Smith&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>函数操作导致索引失效&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>如果在查询条件中对索引列使用了函数或运算，索引会失效。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 索引不会被使用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LEFT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">last_name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Smi&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>数据类型不一致&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>查询条件中的数据类型与索引列的数据类型不一致时，索引可能失效。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 索引可能失效，因为 &amp;#39;123&amp;#39; 是字符串，而 id 是整数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;123&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="查询条件的组合问题">查询条件的组合问题
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>OR 条件影响索引使用&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>当查询中使用 &lt;code>OR&lt;/code> 条件时，如果 &lt;code>OR&lt;/code> 条件中的每个部分都没有单独使用索引，则整个查询不会使用索引。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 索引不会被使用，除非 last_name 和 department_id 上都有单独的索引
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">last_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Smith&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">OR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>不符合最左前缀原则&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>对于复合索引，查询条件必须包含索引的最左前缀，否则索引失效。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 复合索引 idx_name_department(last_name, department_id)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- department_id 列不会单独使用索引
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="索引选择策略和优化器影响">索引选择策略和优化器影响
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>小表全表扫描&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>对于数据量很小的表，MySQL 优化器可能选择全表扫描，而不是使用索引。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>高选择性列上的索引&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>如果索引列的选择性不高（即列中的重复值很多），优化器可能会选择不使用索引。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>统计信息不准确&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>当表的数据量变化较大时，索引的统计信息可能变得不准确，需要手动更新统计信息。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">ANALYZE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="其他影响索引使用的情况">其他影响索引使用的情况
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>覆盖索引失效&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>如果查询的列无法被索引完全覆盖（即索引无法提供所有需要的列），则覆盖索引可能失效。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 如果 idx_name_department 只是 (last_name, department_id)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 而查询需要其他列
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">first_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">last_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Smith&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>前导模糊查询&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>使用前导通配符的模糊查询会导致索引失效。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 索引不会被使用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">last_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;%Smith&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="索引例子">索引例子
&lt;/h3>&lt;p>下面是一些示例，展示了不同情况下索引的使用与失效：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 假设有一个复合索引 idx_name_department(last_name, department_id)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 索引有效
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">last_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Smith&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 索引部分失效，仅 last_name 被使用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">last_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Smith&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 索引失效，因为使用了函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LEFT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">last_name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Smi&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 索引失效，因为使用了前导通配符
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">last_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LIKE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;%Smith&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 索引失效，除非 last_name 和 department_id 上都有单独的索引
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">last_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Smith&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">OR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 索引失效，因为不符合最左前缀原则
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">department_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="锁">锁
&lt;/h2>&lt;p>MySQL 锁是数据库管理系统（DBMS）中用于协调多个用户对数据库资源（如表、行）访问的一种机制。锁的主要作用是确保数据一致性和完整性，同时允许并发访问。以下是 MySQL 锁的一些关键概念和常见类型：&lt;/p>
&lt;h3 id="锁的类型">锁的类型
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>表级锁（Table Lock）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>读锁（共享锁，S 锁）&lt;/strong>：允许多个事务同时读取表中的数据，但任何事务在持有读锁时不能对表进行写操作。&lt;/li>
&lt;li>&lt;strong>写锁（排他锁，X 锁）&lt;/strong>：独占锁，只有获得写锁的事务可以读取和修改表中的数据，其他事务不能读或写该表。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 加读锁
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LOCK&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TABLES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">READ&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 加写锁
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LOCK&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TABLES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WRITE&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 释放锁
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UNLOCK&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TABLES&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>行级锁（Row Lock）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>共享锁（S 锁）&lt;/strong>：允许多个事务读取一行，但不能修改该行。&lt;/li>
&lt;li>&lt;strong>排他锁（X 锁）&lt;/strong>：独占锁，获得排他锁的事务可以读取和修改该行，其他事务不能访问该行。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>行级锁是通过 InnoDB 存储引擎实现的，用于提高并发性能。&lt;/p>
&lt;h3 id="锁的粒度">锁的粒度
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>表锁（Table Lock）&lt;/strong>：锁住整张表，适用于读多写少的场景，开销较小，但并发性较差。&lt;/li>
&lt;li>&lt;strong>行锁（Row Lock）&lt;/strong>：锁住表中的某一行，适用于写操作频繁的场景，开销较大，但并发性较好。&lt;/li>
&lt;/ol>
&lt;h3 id="锁的机制">锁的机制
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>自动锁定&lt;/strong>：
&lt;ul>
&lt;li>InnoDB 存储引擎会在执行 DML 操作（如 SELECT, INSERT, UPDATE, DELETE）时自动加锁。&lt;/li>
&lt;li>事务开始时，InnoDB 会自动加上必要的锁，并在事务提交或回滚时释放锁。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>显式锁定&lt;/strong>：
&lt;ul>
&lt;li>开发者可以使用显式锁定语句来控制锁的行为，适用于需要精细控制锁的场景。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="死锁">死锁
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>死锁的定义&lt;/strong>：
&lt;ul>
&lt;li>当两个或多个事务相互持有对方所需要的资源并等待对方释放，导致无法继续执行的情况称为死锁。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>死锁检测和处理&lt;/strong>：
&lt;ul>
&lt;li>InnoDB 存储引擎有内置的死锁检测机制，会自动检测并处理死锁，通过回滚其中一个事务来解除死锁。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="常用锁相关语句">常用锁相关语句
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>加锁和解锁&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 加读锁（共享锁）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">LOCK&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TABLES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">READ&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 加写锁（排他锁）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">LOCK&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TABLES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table_name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WRITE&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 解锁
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">UNLOCK&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TABLES&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>事务和锁&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 开始事务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">START&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TRANSACTION&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 提交事务并释放锁
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">COMMIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 回滚事务并释放锁
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">ROLLBACK&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>查看锁信息&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 查看当前锁信息
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SHOW&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ENGINE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">INNODB&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">STATUS&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="锁的最佳实践">锁的最佳实践
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>尽量使用 InnoDB 存储引擎&lt;/strong>：因为 InnoDB 支持行级锁，有更高的并发性能和更强的事务支持。&lt;/li>
&lt;li>&lt;strong>控制事务大小&lt;/strong>：尽量减少单个事务中的操作数量和时间，避免长事务导致锁定时间过长。&lt;/li>
&lt;li>&lt;strong>合适的索引&lt;/strong>：确保查询使用合适的索引，以减少锁定的行数，提高锁的效率。&lt;/li>
&lt;li>&lt;strong>显式锁定&lt;/strong>：在必要时使用显式锁定，但要注意控制锁的粒度和范围，以平衡并发性和一致性。&lt;/li>
&lt;li>&lt;strong>死锁重试机制&lt;/strong>：在应用程序中实现死锁重试机制，以应对偶发的死锁情况。&lt;/li>
&lt;/ol>
&lt;h3 id="锁例子">锁例子
&lt;/h3>&lt;p>下面是一些例子，展示了 MySQL 锁的使用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 1. 显式表锁
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">LOCK&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TABLES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">READ&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 加读锁
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">UNLOCK&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TABLES&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 解锁
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 2. 使用事务和行级锁
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">START&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TRANSACTION&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">UPDATE&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">-- 加排他锁
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">UPDATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">COMMIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 3. 死锁重试机制
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">DELIMITER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PROCEDURE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">update_salary&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">BEGIN&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">DECLARE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">retry_count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DEFAULT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">DECLARE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">EXIT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">HANDLER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SQLEXCEPTION&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">BEGIN&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">retry_count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">retry_count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">IF&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">retry_count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">THEN&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ROLLBACK&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">RESIGNAL&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ELSE&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">ROLLBACK&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">END&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">IF&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">END&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">START&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TRANSACTION&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">UPDATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">employees&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">COMMIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">END&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">DELIMITER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="事务">事务
&lt;/h2>&lt;h3 id="事务的四大特征">事务的四大特征
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>原子性（Atomicity）&lt;/strong>：事务里的内容要么全部成功要么都不成功。&lt;/li>
&lt;li>&lt;strong>一致性（Consistency）&lt;/strong>：事务前后数据的完整性保持一致，如：a 给 b 转一千块，事务执行以后，a 和 b 的钱总数是一样的。&lt;/li>
&lt;li>&lt;strong>隔离性（Isolation）&lt;/strong>：隔离性是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离。
即要达到这么一种效果：对于任意两个并发的事务 T1 和 T2，在事务 T1 看来，T2 要么在 T1 开始之前就已经结束，要么在 T1 结束之后才开始，这样每个事务都感觉不到有其他事务在并发地执行。&lt;/li>
&lt;li>&lt;strong>持久性（Durability）&lt;/strong>：事务结束，数据就持久化到数据库。&lt;/li>
&lt;/ol>
&lt;h3 id="并发事务问题">并发事务问题
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>脏读 (Dirty Read)&lt;/strong>
脏读发生在一个事务能够读取另一个事务尚未提交的数据时。如果第二个事务回滚（撤销）了这些更改，那么第一个事务读取到的数据就变得无效或“脏”了。脏读仅在最低的隔离级别“读未提交”（Read Uncommitted）下会发生。
&lt;strong>示例&lt;/strong>：
&lt;ul>
&lt;li>事务 A 更新了一行数据，但未提交。&lt;/li>
&lt;li>事务 B 读取了这个更新的数据。&lt;/li>
&lt;li>事务 A 回滚了更新。&lt;/li>
&lt;li>事务 B 读取到的数据现在无效，因为事务 A 的更改没有最终被提交。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>不可重复读 (Non-Repeatable Read)&lt;/strong>
不可重复读问题出现在一个事务在两次读取同一数据时，数据发生了变化。这种情况通常发生在隔离级别“读已提交”（Read Committed）下。
&lt;strong>示例&lt;/strong>：
&lt;ul>
&lt;li>事务 A 读取了一行数据。&lt;/li>
&lt;li>事务 B 更新了该行数据并提交。&lt;/li>
&lt;li>事务 A 再次读取同一行数据，发现数据已经发生变化。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>幻读 (Phantom Read)&lt;/strong>
幻读问题发生在一个事务执行两次相同的查询，但第二次查询返回的结果集包含了第一次查询时不存在的“幻影”行。这种情况通常发生在隔离级别“可重复读”（Repeatable Read）下，但可以在“串行化”（Serializable）级别避免。
&lt;strong>示例&lt;/strong>：
&lt;ul>
&lt;li>事务 A 读取符合某个条件的多行数据。&lt;/li>
&lt;li>事务 B 插入了几行满足事务 A 查询条件的新数据并提交。&lt;/li>
&lt;li>事务 A 再次执行相同的查询，发现结果集中包含了新插入的行。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="四种标准的事务隔离级别">四种标准的事务隔离级别
&lt;/h3>&lt;p>在 MySQL 中，事务隔离级别定义了一个事务在读取数据时与其他并发事务的交互方式。&lt;/p>
&lt;ol>
&lt;li>&lt;strong>读未提交 (Read Uncommitted)&lt;/strong>：在这个级别，事务可以读取其他事务未提交的数据。允许脏读、不可重复读和幻读。&lt;/li>
&lt;li>&lt;strong>读已提交 (Read Committed)&lt;/strong>：在这个级别，事务只能读取已经提交的数据。防止脏读，但允许不可重复读和幻读。&lt;/li>
&lt;li>&lt;strong>可重复读 (Repeatable Read)&lt;/strong>：在这个级别，一个事务在开始时看到的数据一致，即使其他事务在该事务执行过程中提交了数据。MySQL 的默认隔离级别是可重复读。防止脏读和不可重复读，但可能允许幻读。&lt;/li>
&lt;li>&lt;strong>串行化 (Serializable)&lt;/strong>：在这个级别，所有事务按顺序执行，完全避免并发问题。这会使系统性能下降，但可以避免“脏读”、“不可重复读”和“幻读”。&lt;/li>
&lt;/ol>
&lt;p>各个隔离级别之间的关系如下：&lt;/p>
&lt;blockquote>
&lt;p>读未提交 &amp;lt; 读已提交 &amp;lt; 可重复读 &amp;lt; 串行化&lt;/p>&lt;/blockquote>
&lt;p>MySQL 的默认事务隔离级别是“可重复读”，可以通过以下 SQL 命令查看和设置当前的隔离级别：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 查看当前会话的隔离级别
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">@@&lt;/span>&lt;span class="n">tx_isolation&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 设置当前会话的隔离级别
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SESSION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TRANSACTION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ISOLATION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LEVEL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">REPEATABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">READ&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 查看全局隔离级别
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">@@&lt;/span>&lt;span class="k">global&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tx_isolation&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 设置全局隔离级别
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">GLOBAL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TRANSACTION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ISOLATION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">LEVEL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">REPEATABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">READ&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Spring Boot 中可以通过使用 @Transactional 注解指定某个方法的隔离级别。&lt;/p>
&lt;p>如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.springframework.transaction.annotation.Isolation&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.springframework.transaction.annotation.Transactional&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">YourService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Transactional&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isolation&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Isolation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">READ_COMMITTED&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">yourTransactionalMethod&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// your transactional code&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在这个例子中，&lt;code>yourTransactionalMethod&lt;/code> 方法的事务隔离级别被设置为 &lt;code>READ_COMMITTED&lt;/code>。&lt;/p>
&lt;p>Spring 提供的隔离级别枚举如下，对应于标准的 SQL 隔离级别：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Isolation.DEFAULT&lt;/strong>：使用底层数据库的默认隔离级别。&lt;/li>
&lt;li>&lt;strong>Isolation.READ_UNCOMMITTED&lt;/strong>：读未提交。&lt;/li>
&lt;li>&lt;strong>Isolation.READ_COMMITTED&lt;/strong>：读已提交。&lt;/li>
&lt;li>&lt;strong>Isolation.REPEATABLE_READ&lt;/strong>：可重复读。&lt;/li>
&lt;li>&lt;strong>Isolation.SERIALIZABLE&lt;/strong>：串行化。&lt;/li>
&lt;/ul>
&lt;h3 id="乐悲观锁">乐(悲)观锁
&lt;/h3>&lt;h4 id="乐观锁-optimistic-lock">乐观锁 (Optimistic Lock)
&lt;/h4>&lt;p>&lt;strong>概念：&lt;/strong>&lt;/p>
&lt;p>乐观锁假设数据在并发环境下很少发生冲突，因此在操作数据时不加锁。乐观锁在提交更新时检查数据是否被其他事务修改，如果数据被修改，则回滚当前事务。&lt;/p>
&lt;p>&lt;strong>特点：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>无锁操作&lt;/strong>：在读取数据时不加锁，只在提交更新时检查冲突。&lt;/li>
&lt;li>&lt;strong>冲突检测&lt;/strong>：通过比较版本号或时间戳来检测数据是否被修改。&lt;/li>
&lt;li>&lt;strong>性能较高&lt;/strong>：由于没有频繁的加锁和解锁操作，系统性能较高。&lt;/li>
&lt;/ul>
&lt;p>适用场景：&lt;/p>
&lt;ul>
&lt;li>数据争用不严重的场景。&lt;/li>
&lt;li>读操作多于写操作的场景。&lt;/li>
&lt;li>对性能要求较高的场景。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>实现方式：&lt;/strong>&lt;/p>
&lt;p>乐观锁通常使用版本号或时间戳机制。例如，在数据库表中添加一个 &lt;code>version&lt;/code> 字段，每次更新时检查并递增版本号。以下是一个示例：&lt;/p>
&lt;p>假设有一个 &lt;code>accounts&lt;/code> 表：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">accounts&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">DECIMAL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>更新操作：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">BEGIN&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">accounts&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cm">/* Perform some business logic, e.g., balance += 100 */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">UPDATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">accounts&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">version&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">old_version&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">COMMIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在更新时，检查 version 是否与读取时一致，如果不一致则更新失败，可以通过应用逻辑重试或报错处理。&lt;/p>
&lt;h4 id="悲观锁-pessimistic-lock">悲观锁 (Pessimistic Lock)
&lt;/h4>&lt;p>&lt;strong>概念：&lt;/strong>&lt;/p>
&lt;p>悲观锁假设数据在并发环境下会发生冲突，因此在操作数据之前会锁定资源，以防止其他事务对数据进行修改。悲观锁通常依赖于数据库的锁机制。&lt;/p>
&lt;p>&lt;strong>特点：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>加锁强度高&lt;/strong>：在读取或写入数据之前，先对数据进行加锁，确保在事务结束之前，其他事务不能对数据进行操作。&lt;/li>
&lt;li>&lt;strong>阻塞性&lt;/strong>：如果一个事务对数据加了悲观锁，其他尝试访问该数据的事务会被阻塞，直到锁被释放。&lt;/li>
&lt;li>&lt;strong>开销大&lt;/strong>：由于频繁的加锁和解锁操作，会增加系统开销，影响性能。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>适用场景：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>数据争用严重的场景。&lt;/li>
&lt;li>写操作频繁的场景。&lt;/li>
&lt;li>对数据一致性要求极高的场景。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>实现方式：&lt;/strong>&lt;/p>
&lt;p>在 SQL 中可以使用 &lt;code>SELECT ... FOR UPDATE&lt;/code> 来实现悲观锁。例如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">BEGIN&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">accounts&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FOR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">UPDATE&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cm">/* Perform updates */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">COMMIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="乐悲观锁总结">乐(悲)观锁总结
&lt;/h4>&lt;ul>
&lt;li>&lt;strong>悲观锁&lt;/strong>：通过加锁确保数据一致性，适用于高争用环境，但性能开销较大。&lt;/li>
&lt;li>&lt;strong>乐观锁&lt;/strong>：通过版本控制或时间戳检测数据冲突，适用于低争用环境，性能较好，但需要处理冲突。&lt;/li>
&lt;/ul>
&lt;p>选择使用哪种锁机制，应根据具体应用的并发情况、数据访问模式和性能需求来决定。&lt;/p>
&lt;h3 id="mvcc多版本并发控制">MVCC（多版本并发控制）
&lt;/h3>&lt;p>多版本并发控制 (MVCC, Multi-Version Concurrency Control) 是一种用于数据库管理系统的并发控制机制，它允许多个事务并发地执行而不会互相阻塞，同时提供一致的读和写操作。MVCC 通过维护数据的多个版本来实现，避免了许多传统锁机制带来的性能开销。&lt;/p>
&lt;h4 id="mvcc-的工作原理">MVCC 的工作原理
&lt;/h4>&lt;p>MVCC 通过为每个数据项保存多个版本，并为每个事务分配一个唯一的时间戳或事务 ID (Transaction ID, TID)，来管理并发事务。以下是 MVCC 的主要工作原理：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>版本链&lt;/strong>：
每个数据项都有一个版本链，链中包含该数据项的所有历史版本。每个版本包含数据值和相关的元数据（如创建时间戳和删除时间戳）。&lt;/li>
&lt;li>&lt;strong>读取操作&lt;/strong>：
当事务读取数据时，它会查找与自己的时间戳匹配的最新版本。这意味着事务只会看到在其开始之前已经提交的版本，不会被其他并发事务未提交的修改所影响。&lt;/li>
&lt;li>&lt;strong>写入操作&lt;/strong>：
当事务修改数据时，它不会覆盖现有版本，而是创建一个新版本，并将其添加到版本链中。新版本会带有事务的时间戳，表明它是由该事务创建的。&lt;/li>
&lt;li>&lt;strong>提交和回滚&lt;/strong>：
当事务提交时，创建的新版本会成为可见版本。如果事务回滚，创建的新版本会被标记为无效，不会影响其他事务。&lt;/li>
&lt;/ol>
&lt;h4 id="mvcc-的优点">MVCC 的优点
&lt;/h4>&lt;ol>
&lt;li>&lt;strong>减少锁竞争&lt;/strong>：
由于读操作不会阻塞写操作，写操作也不会阻塞读操作，MVCC 有效地减少了锁竞争，提高了系统的并发性能。&lt;/li>
&lt;li>&lt;strong>一致性读取&lt;/strong>：
事务在读取数据时，总是能够看到一致的视图，不会被其他并发事务的未提交修改所影响，避免了脏读。&lt;/li>
&lt;li>&lt;strong>提升性能&lt;/strong>：
由于读操作不需要加锁，系统的读性能得到显著提升。写操作创建新版本而不是覆盖旧版本，也提高了写操作的效率。&lt;/li>
&lt;/ol>
&lt;h4 id="mvcc-处理的并发问题">MVCC 处理的并发问题
&lt;/h4>&lt;ol>
&lt;li>&lt;strong>避免脏读&lt;/strong>：
读操作只看到已经提交的数据版本，因此避免了读取未提交数据带来的脏读问题。&lt;/li>
&lt;li>&lt;strong>避免不可重复读&lt;/strong>：
事务在读取同一数据项时，总是能够看到一致的版本，避免了同一事务中多次读取到不同数据的问题。&lt;/li>
&lt;li>&lt;strong>幻读&lt;/strong>：
MVCC 在某些数据库系统中可以避免幻读问题。通过使用 MVCC 和合适的隔离级别（如可重复读或串行化），可以确保查询结果集的一致性。&lt;/li>
&lt;/ol>
&lt;h4 id="mvcc-的实现">MVCC 的实现
&lt;/h4>&lt;p>不同数据库系统对 MVCC 的实现有所不同。以下是几种流行数据库的 MVCC 实现方式：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>PostgreSQL&lt;/strong>：
PostgreSQL 使用事务 ID (XID) 和隐藏字段来实现 MVCC。每个数据行都有两个隐藏字段，分别表示创建该行的事务 ID 和删除该行的事务 ID。&lt;/li>
&lt;li>&lt;strong>MySQL (InnoDB 存储引擎)&lt;/strong>：
InnoDB 使用 undo log 和事务 ID 来实现 MVCC。每个数据行都有一个隐藏的事务 ID 和回滚指针，用于指向前一个版本的数据。&lt;/li>
&lt;li>&lt;strong>Oracle&lt;/strong>：
Oracle 使用回滚段来存储旧版本的数据，当需要读取旧版本时，通过回滚段获取数据的历史版本。&lt;/li>
&lt;/ol>
&lt;h4 id="mvcc-总结">MVCC 总结
&lt;/h4>&lt;p>MVCC 是一种强大的并发控制机制，通过维护数据的多个版本，实现高效的并发事务处理。它有效地减少了锁竞争，提高了系统的性能和一致性，是现代数据库系统中广泛应用的技术。&lt;/p>
&lt;h2 id="explain">EXPLAIN
&lt;/h2>&lt;p>&lt;code>EXPLAIN&lt;/code> 是 MySQL 提供的一种分析工具，用于查看 SQL 查询的执行计划。它显示了查询优化器是如何执行 SQL 语句的，帮助开发人员优化查询性能。以下是 &lt;code>EXPLAIN&lt;/code> 的用法和解释。&lt;/p>
&lt;h3 id="基本用法">基本用法
&lt;/h3>&lt;p>&lt;code>EXPLAIN SELECT * FROM table_name WHERE condition;&lt;/code>&lt;/p>
&lt;p>&lt;code>EXPLAIN&lt;/code> 会显示查询的执行计划，包括使用的索引、连接类型、扫描的行数等。&lt;/p>
&lt;h3 id="输出列的含义">输出列的含义
&lt;/h3>&lt;p>执行 &lt;code>EXPLAIN&lt;/code> 后，结果集包含多个列，每一列都有特定的含义：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>id&lt;/strong>：查询的标识符。每个 &lt;code>SELECT&lt;/code> 子句或子查询都会分配一个唯一的 &lt;code>id&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>select_type&lt;/strong>：查询的类型。常见类型包括：&lt;/p>
&lt;ul>
&lt;li>&lt;code>SIMPLE&lt;/code>：简单的 SELECT 查询，不包含子查询或 UNION。&lt;/li>
&lt;li>&lt;code>PRIMARY&lt;/code>：最外层的 SELECT 查询。&lt;/li>
&lt;li>&lt;code>SUBQUERY&lt;/code>：子查询中的 SELECT。&lt;/li>
&lt;li>&lt;code>DERIVED&lt;/code>：派生表（子查询中的 FROM 子句）。&lt;/li>
&lt;li>&lt;code>UNION&lt;/code>：UNION 中的第二个或后续的 SELECT 查询。&lt;/li>
&lt;li>&lt;code>UNION RESULT&lt;/code>：UNION 的结果集。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>table&lt;/strong>：查询的表。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>partitions&lt;/strong>：查询涉及的分区（如果有）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>type&lt;/strong>：连接类型，表示查询中的表如何连接。连接类型的效率从高到低依次为：&lt;/p>
&lt;ul>
&lt;li>&lt;code>system&lt;/code>：表只有一行（系统表）。&lt;/li>
&lt;li>&lt;code>const&lt;/code>：表最多只有一行匹配（常量）。&lt;/li>
&lt;li>&lt;code>eq_ref&lt;/code>：对于每个来自前一个表的行，读取一行。&lt;/li>
&lt;li>&lt;code>ref&lt;/code>：对于每个来自前一个表的行，读取匹配几行。&lt;/li>
&lt;li>&lt;code>range&lt;/code>：只检索给定范围的行，使用索引选择行。&lt;/li>
&lt;li>&lt;code>index&lt;/code>：全索引扫描。&lt;/li>
&lt;li>&lt;code>ALL&lt;/code>：全表扫描。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>possible_keys&lt;/strong>：查询中可能使用的索引。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>key&lt;/strong>：查询实际使用的索引。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>key_len&lt;/strong>：使用的索引的长度。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>ref&lt;/strong>：使用的列或常量与索引比较。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>rows&lt;/strong>：MySQL 估计要读取的行数。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>filtered&lt;/strong>：查询条件过滤的行的百分比。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Extra&lt;/strong>：其他信息，比如：&lt;/p>
&lt;ul>
&lt;li>&lt;code>Using index&lt;/code>：查询使用了覆盖索引。&lt;/li>
&lt;li>&lt;code>Using where&lt;/code>：查询使用了 WHERE 子句来过滤行。&lt;/li>
&lt;li>&lt;code>Using temporary&lt;/code>：查询使用了临时表。&lt;/li>
&lt;li>&lt;code>Using filesort&lt;/code>：查询使用了文件排序。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="示例分析">示例分析
&lt;/h3>&lt;h4 id="简单查询">简单查询
&lt;/h4>&lt;p>&lt;code>EXPLAIN SELECT * FROM employees WHERE id = 1;&lt;/code>&lt;/p>
&lt;p>结果可能显示：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>id&lt;/th>
&lt;th>select_type&lt;/th>
&lt;th>table&lt;/th>
&lt;th>type&lt;/th>
&lt;th>possible_keys&lt;/th>
&lt;th>key&lt;/th>
&lt;th>key_len&lt;/th>
&lt;th>ref&lt;/th>
&lt;th>rows&lt;/th>
&lt;th>filtered&lt;/th>
&lt;th>Extra&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>SIMPLE&lt;/td>
&lt;td>employees&lt;/td>
&lt;td>const&lt;/td>
&lt;td>PRIMARY&lt;/td>
&lt;td>PRIMARY&lt;/td>
&lt;td>4&lt;/td>
&lt;td>const&lt;/td>
&lt;td>1&lt;/td>
&lt;td>100.00&lt;/td>
&lt;td>Using where&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>解释：&lt;/p>
&lt;ul>
&lt;li>&lt;code>id&lt;/code> 为 1，表示这是一个简单查询。&lt;/li>
&lt;li>&lt;code>select_type&lt;/code> 为 &lt;code>SIMPLE&lt;/code>，没有子查询。&lt;/li>
&lt;li>&lt;code>table&lt;/code> 为 &lt;code>employees&lt;/code>，表示查询的表。&lt;/li>
&lt;li>&lt;code>type&lt;/code> 为 &lt;code>const&lt;/code>，因为 &lt;code>id&lt;/code> 是主键，这是一个常量查询。&lt;/li>
&lt;li>&lt;code>possible_keys&lt;/code> 和 &lt;code>key&lt;/code> 都是 &lt;code>PRIMARY&lt;/code>，表示使用了主键索引。&lt;/li>
&lt;li>&lt;code>rows&lt;/code> 为 1，表示预计扫描一行。&lt;/li>
&lt;li>&lt;code>Extra&lt;/code> 为 &lt;code>Using where&lt;/code>，表示使用了 WHERE 子句。&lt;/li>
&lt;/ul>
&lt;h4 id="连接查询">连接查询
&lt;/h4>&lt;p>&lt;code>EXPLAIN SELECT e.*, d.dept_name FROM employees e JOIN departments d ON e.dept_id = d.dept_id;&lt;/code>&lt;/p>
&lt;p>结果可能显示：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>id&lt;/th>
&lt;th>select_type&lt;/th>
&lt;th>table&lt;/th>
&lt;th>type&lt;/th>
&lt;th>possible_keys&lt;/th>
&lt;th>key&lt;/th>
&lt;th>key_len&lt;/th>
&lt;th>ref&lt;/th>
&lt;th>rows&lt;/th>
&lt;th>filtered&lt;/th>
&lt;th>Extra&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>SIMPLE&lt;/td>
&lt;td>d&lt;/td>
&lt;td>ALL&lt;/td>
&lt;td>PRIMARY&lt;/td>
&lt;td>NULL&lt;/td>
&lt;td>NULL&lt;/td>
&lt;td>NULL&lt;/td>
&lt;td>10&lt;/td>
&lt;td>100.00&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>SIMPLE&lt;/td>
&lt;td>e&lt;/td>
&lt;td>ref&lt;/td>
&lt;td>dept_id&lt;/td>
&lt;td>dept_id&lt;/td>
&lt;td>4&lt;/td>
&lt;td>d.dept_id&lt;/td>
&lt;td>100&lt;/td>
&lt;td>100.00&lt;/td>
&lt;td>Using where&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>解释：&lt;/p>
&lt;ul>
&lt;li>第一个 &lt;code>id&lt;/code> 为 1 的行表示对 &lt;code>departments&lt;/code> 表的全表扫描（type 为 &lt;code>ALL&lt;/code>）。&lt;/li>
&lt;li>第二个 &lt;code>id&lt;/code> 为 1 的行表示对 &lt;code>employees&lt;/code> 表的引用（type 为 &lt;code>ref&lt;/code>），使用了 &lt;code>dept_id&lt;/code> 索引。&lt;/li>
&lt;li>&lt;code>rows&lt;/code> 列表明 MySQL 预计从 &lt;code>departments&lt;/code> 表中读取 10 行，并从 &lt;code>employees&lt;/code> 表中读取 100 行。&lt;/li>
&lt;/ul>
&lt;h3 id="优化建议">优化建议
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>使用合适的索引&lt;/strong>：确保查询中使用了合适的索引，以减少扫描的行数。&lt;/li>
&lt;li>&lt;strong>避免全表扫描&lt;/strong>：尽量避免 &lt;code>type&lt;/code> 为 &lt;code>ALL&lt;/code> 的全表扫描，可以通过增加索引来优化。&lt;/li>
&lt;li>&lt;strong>优化连接类型&lt;/strong>：尽量使用效率较高的连接类型，如 &lt;code>ref&lt;/code>、&lt;code>eq_ref&lt;/code> 等。&lt;/li>
&lt;li>&lt;strong>减少临时表和文件排序&lt;/strong>：避免 &lt;code>Extra&lt;/code> 列中出现 &lt;code>Using temporary&lt;/code> 和 &lt;code>Using filesort&lt;/code>，可以通过优化查询或增加索引来实现。&lt;/li>
&lt;/ol>
&lt;p>通过合理使用 &lt;code>EXPLAIN&lt;/code> 分析查询执行计划，可以发现查询性能的瓶颈，并进行相应的优化。&lt;/p></description></item></channel></rss>